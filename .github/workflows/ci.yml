name: Flutter CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - name: Clear Gradle cache
        run: rm -rf ~/.gradle/caches/
      - run: flutter clean
      - run: flutter pub get
      - run: flutter test
      - name: Install Android SDK Command Line Tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d latest
      - name: Install Android NDK
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;27.0.12077973"
      # Securely handle Android keystore and key.properties
      - name: Decode Keystore from Secret
        if: env.KEYSTORE_BASE64 != null
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/release-keystore.jks
      - name: Write key.properties from Secrets
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          echo "storeFile=release-keystore.jks" > android/key.properties
          echo "storePassword=$KEYSTORE_PASSWORD" >> android/key.properties
          echo "keyPassword=$KEYSTORE_PASSWORD" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
      - run: flutter build apk --release
      - name: Upload APK to Website API
        env:
          API_TOKEN: ${{ secrets.APK_UPLOAD_TOKEN }}
        run: |
          curl -X POST https://em-coding.me/api/upload-apk \
            -H "Authorization: Bearer $API_TOKEN" \
            -F "file=@build/app/outputs/flutter-apk/app-release.apk"

      